---
import Section from "../Section.astro"
import { work } from "@cv"
---
<Section className={Astro.props.className} title="Experience">
  <ul class="flex flex-col">
    {work.map(({ name, startDate, endDate, position, responsibilities, url, skills, location, location_type }) => {
      const startYear = new Date(startDate).getFullYear()
      const endYear = endDate != null ? new Date(endDate).getFullYear() : "Present"

      return (
        <li class="relative print:py-2">
          <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:opacity-100! ">
            <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
              <time datetime={startDate}>{startYear}</time> - <time datetime={endDate}>{endYear}</time>
            </header>
            <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-fill-muted before:h-full before:mt-2">
              <div class="absolute w-2 h-2 bg-skin-fill-muted rounded-full mt-2 -translate-x-[1.71rem] ring-3 print:hidden ring-skin-fill"></div>
              
              <h3>
                <div class="inline-flex items-center text-lg print:text-base leading-tight group/link">
                  <span>
                    {position} <span>@</span>{" "}
                    {url ? (
                      <a class="text-skin-hue" href={url} title={`View ${name}`} target="_blank">{name}</a>
                    ) : (
                      <span>{name}</span>
                    )}
                  </span>
                  {url &&
                    <span class="inline-block text-skin-hue print:[&>svg]:hidden">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="inline-block w-4 h-4 ml-1 transition-transform translate-y-px shrink-0 group-hover/link:-translate-y-1 group-hover/link:translate-x-1">
                        <path fill-rule="evenodd" d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z" clip-rule="evenodd"></path>
                      </svg>
                    </span>
                  }
                </div>
              </h3>

              {(location || location_type) && (
                <div class="text-xs text-skin-muted">
                  {location} {location && location_type && "-"} {location_type}
                </div>
              )}

              {/* Responsibilities */}
              {responsibilities && (
                <div class="mt-4 flex flex-col gap-1 print:gap-0 print:text-xs text-sm">
                  <h4>Responsibilities:</h4>
                  <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                    {responsibilities.map((responsibility, i) => (
                      <>
                        <li>{responsibility}</li>
                      </>
                    ))}
                  </ul>
                </div>
              )}

              {/* Skills */}
              {skills && (
                <ul class="flex flex-wrap gap-2 mt-4 print:hidden" aria-label="Technologies used">
                  {skills.map((skill, i) => (
                    <li class="bg-skin-button-accent/20 border-skin-hue/20 text-skin-hue print:bg-transparent print:text-zinc-800 flex gap-1 items-center border rounded-md px-2 py-0.5 text-xs">
                      <span>{skill}</span>
                    </li>
                  ))}
                </ul>
              )}
            </div>
          </div>
        </li>
      )
    })}
  </ul>  
</Section>

<style>
  @reference "@/styles/global.css";
  li::marker {
    @apply text-skin-hue;
  }
</style>